/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.healthvault.restapi;

import com.microsoft.healthvault.restapi.models.ErrorResponseException;
import com.microsoft.healthvault.restapi.models.OnboardingRequest;
import com.microsoft.healthvault.restapi.models.OnboardingResponse;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in Onboardings.
 */
public interface Onboardings {
    /**
     * Onboard a user.
     *
     * @param onboardingRequest The meta data associated with an onboarding request
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorResponseException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the OnboardingResponse object if successful.
     */
    OnboardingResponse generateInviteCode(OnboardingRequest onboardingRequest);

    /**
     * Onboard a user.
     *
     * @param onboardingRequest The meta data associated with an onboarding request
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<OnboardingResponse> generateInviteCodeAsync(OnboardingRequest onboardingRequest, final ServiceCallback<OnboardingResponse> serviceCallback);

    /**
     * Onboard a user.
     *
     * @param onboardingRequest The meta data associated with an onboarding request
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the OnboardingResponse object
     */
    Observable<OnboardingResponse> generateInviteCodeAsync(OnboardingRequest onboardingRequest);

    /**
     * Onboard a user.
     *
     * @param onboardingRequest The meta data associated with an onboarding request
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the OnboardingResponse object
     */
    Observable<ServiceResponse<OnboardingResponse>> generateInviteCodeWithServiceResponseAsync(OnboardingRequest onboardingRequest);

}
